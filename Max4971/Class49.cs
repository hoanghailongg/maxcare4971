using System;
using System.Collections.Generic;

internal class Class49
{
	public static string string_0 = "";

	public static string string_1 = "";

	public static string string_2 = "";

	public static string string_3 = "";

	public static string string_4 = "https://download.minsoftware.vn/";

	public static string string_5 = "";

	public static string string_6 = "min";

	public static string string_7 = "";

	public static int int_0 = 0;

	public static int int_1 = 0;

	public static int int_2 = 0;

	public static int int_3 = 0;

	public static Random random_0;

	public static List<string> list_0 = new List<string> { "app.minsoftware.vn", "app.minsoftware.xyz", "beta.minsoftware.vn" };

	public static string string_8 = GClass14.smethod_53("");

	public static string string_9 = GClass14.smethod_53("W0NtZGxldEJpbmRpbmcoKV0NCnBhcmFtICgNCiAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeSA9ICRUcnVlKV0NCiAgICBbc3RyaW5nXQ0KICAgICRDaHJvbWVEcml2ZXJPdXRwdXRQYXRoLCAgICANCiAgICBbUGFyYW1ldGVyKE1hbmRhdG9yeSA9ICRmYWxzZSldDQogICAgW3N0cmluZ10NCiAgICAkQ2hyb21lVmVyc2lvbiwgDQogICAgW1BhcmFtZXRlcihNYW5kYXRvcnkgPSAkZmFsc2UpXQ0KICAgIFtTd2l0Y2hdDQogICAgJEZvcmNlRG93bmxvYWQNCikNCg0KIyBzdG9yZSBvcmlnaW5hbCBwcmVmZXJlbmNlIHRvIHJldmVydCBiYWNrIGxhdGVyDQokT3JpZ2luYWxQcm9ncmVzc1ByZWZlcmVuY2UgPSAkUHJvZ3Jlc3NQcmVmZXJlbmNlOw0KIyBzZXR0aW5nIHByb2dyZXNzIHByZWZlcmVuY2UgdG8gc2lsZW50bHkgY29udGludWUgd2lsbCBtYXNzaXZlbHkgaW5jcmVhc2UgdGhlIHBlcmZvcm1hbmNlIG9mIGRvd25sb2FkaW5nIHRoZSBDaHJvbWVEcml2ZXINCiRQcm9ncmVzc1ByZWZlcmVuY2UgPSAnU2lsZW50bHlDb250aW51ZSc7DQoNCkZ1bmN0aW9uIEdldC1DaHJvbWVWZXJzaW9uIHsNCiAgICAjICRJc1dpbmRvd3Mgd2lsbCBQb3dlclNoZWxsIENvcmUgYnV0IG5vdCBvbiBQb3dlclNoZWxsIDUgYW5kIGJlbG93LCBidXQgJEVudjpPUyBkb2VzDQogICAgIyB0aGlzIHdheSB5b3UgY2FuIHNhZmVseSBjaGVjayB3aGV0aGVyIHRoZSBjdXJyZW50IG1hY2hpbmUgaXMgcnVubmluZyBXaW5kb3dzIHByZSBhbmQgcG9zdCBQb3dlclNoZWxsIENvcmUNCiAgICBJZiAoJElzV2luZG93cyAtb3IgJEVudjpPUykgew0KICAgICAgICBUcnkgew0KICAgICAgICAgICAgKEdldC1JdGVtIChHZXQtSXRlbVByb3BlcnR5ICdIS0xNOlxTT0ZUV0FSRVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxBcHAgUGF0aHNcY2hyb21lLmV4ZScgLUVycm9yQWN0aW9uIFN0b3ApLicoRGVmYXVsdCknKS5WZXJzaW9uSW5mby5GaWxlVmVyc2lvbjsNCiAgICAgICAgfQ0KICAgICAgICBDYXRjaCB7DQogICAgICAgICAgICBUaHJvdyAiR29vZ2xlIENocm9tZSBub3QgZm91bmQgaW4gcmVnaXN0cnkiOw0KICAgICAgICB9DQogICAgfQ0KICAgIEVsc2VJZiAoJElzTGludXgpIHsNCiAgICAgICAgVHJ5IHsNCiAgICAgICAgICAgICMgdGhpcyB3aWxsIGNoZWNrIHdoZXRoZXIgZ29vZ2xlLWNocm9tZSBjb21tYW5kIGlzIGF2YWlsYWJsZQ0KICAgICAgICAgICAgR2V0LUNvbW1hbmQgZ29vZ2xlLWNocm9tZSAtRXJyb3JBY3Rpb24gU3RvcCB8IE91dC1OdWxsOw0KICAgICAgICAgICAgZ29vZ2xlLWNocm9tZSAtLXByb2R1Y3QtdmVyc2lvbjsNCiAgICAgICAgfQ0KICAgICAgICBDYXRjaCB7DQogICAgICAgICAgICBUaHJvdyAiJ2dvb2dsZS1jaHJvbWUnIGNvbW1hbmQgbm90IGZvdW5kIjsNCiAgICAgICAgfQ0KICAgIH0NCiAgICBFbHNlSWYgKCRJc01hY09TKSB7DQogICAgICAgICRDaHJvbWVQYXRoID0gJy9BcHBsaWNhdGlvbnMvR29vZ2xlIENocm9tZS5hcHAvQ29udGVudHMvTWFjT1MvR29vZ2xlIENocm9tZSc7DQogICAgICAgIElmIChUZXN0LVBhdGggJENocm9tZVBhdGgpIHsNCiAgICAgICAgICAgICRWZXJzaW9uID0gJiAkQ2hyb21lUGF0aCAtLXZlcnNpb247DQogICAgICAgICAgICAkVmVyc2lvbiA9ICRWZXJzaW9uLlJlcGxhY2UoIkdvb2dsZSBDaHJvbWUgIiwgIiIpOw0KICAgICAgICAgICAgJFZlcnNpb247DQogICAgICAgIH0NCiAgICAgICAgRWxzZSB7DQogICAgICAgICAgICBUaHJvdyAiR29vZ2xlIENocm9tZSBub3QgZm91bmQgb24geW91ciBNYWNPUyBtYWNoaW5lIjsNCiAgICAgICAgfQ0KICAgIH0NCiAgICBFbHNlIHsNCiAgICAgICAgVGhyb3cgIllvdXIgb3BlcmF0aW5nIHN5c3RlbSBpcyBub3Qgc3VwcG9ydGVkIGJ5IHRoaXMgc2NyaXB0LiI7DQogICAgfQ0KfQ0KDQojIEluc3RydWN0aW9ucyBmcm9tIGh0dHBzOi8vY2hyb21lZHJpdmVyLmNocm9taXVtLm9yZy9kb3dubG9hZHMvdmVyc2lvbi1zZWxlY3Rpb24NCiMgICBGaXJzdCwgZmluZCBvdXQgd2hpY2ggdmVyc2lvbiBvZiBDaHJvbWUgeW91IGFyZSB1c2luZy4gTGV0J3Mgc2F5IHlvdSBoYXZlIENocm9tZSA3Mi4wLjM2MjYuODEuDQpJZiAoW3N0cmluZ106OklzTnVsbE9yRW1wdHkoJENocm9tZVZlcnNpb24pKSB7DQogICAgJENocm9tZVZlcnNpb24gPSBHZXQtQ2hyb21lVmVyc2lvbiAtRXJyb3JBY3Rpb24gU3RvcDsNCiAgICBXcml0ZS1PdXRwdXQgIkdvb2dsZSBDaHJvbWUgdmVyc2lvbiAkQ2hyb21lVmVyc2lvbiBmb3VuZCBvbiBtYWNoaW5lIjsNCn0NCg0KIyAgIFRha2UgdGhlIENocm9tZSB2ZXJzaW9uIG51bWJlciwgcmVtb3ZlIHRoZSBsYXN0IHBhcnQsIA0KJENocm9tZVZlcnNpb24gPSAkQ2hyb21lVmVyc2lvbi5TdWJzdHJpbmcoMCwgJENocm9tZVZlcnNpb24uTGFzdEluZGV4T2YoIi4iKSk7DQojICAgYW5kIGFwcGVuZCB0aGUgcmVzdWx0IHRvIFVSTCAiaHR0cHM6Ly9jaHJvbWVkcml2ZXIuc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9MQVRFU1RfUkVMRUFTRV8iLiANCiMgICBGb3IgZXhhbXBsZSwgd2l0aCBDaHJvbWUgdmVyc2lvbiA3Mi4wLjM2MjYuODEsIHlvdSdkIGdldCBhIFVSTCAiaHR0cHM6Ly9jaHJvbWVkcml2ZXIuc3RvcmFnZS5nb29nbGVhcGlzLmNvbS9MQVRFU1RfUkVMRUFTRV83Mi4wLjM2MjYiLg0KJENocm9tZURyaXZlclZlcnNpb24gPSAoSW52b2tlLVdlYlJlcXVlc3QgImh0dHBzOi8vY2hyb21lZHJpdmVyLnN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vTEFURVNUX1JFTEVBU0VfJENocm9tZVZlcnNpb24iKS5Db250ZW50Ow0KV3JpdGUtT3V0cHV0ICJMYXRlc3QgbWF0Y2hpbmcgdmVyc2lvbiBvZiBDaHJvbWUgRHJpdmVyIGlzICRDaHJvbWVEcml2ZXJWZXJzaW9uIjsNCg0KSWYgKCgkRm9yY2VEb3dubG9hZCAtZXEgJEZhbHNlKSAtYW5kIChUZXN0LXBhdGggJENocm9tZURyaXZlck91dHB1dFBhdGgpKSB7DQogICAgI0Nocm9tZURyaXZlciA4OC4wLjQzMjQuOTYgKDY4ZGJhMmQ4YTBiMTQ5YTFkM2FmYWM1NmZhNzQ2NDgwMzJiY2Y0NmItcmVmcy9icmFuY2gtaGVhZHMvNDMyNEB7IzE3ODR9KQ0KICAgICRFeGlzdGluZ0Nocm9tZURyaXZlclZlcnNpb24gPSAmICRDaHJvbWVEcml2ZXJPdXRwdXRQYXRoIC0tdmVyc2lvbjsNCiAgICAkRXhpc3RpbmdDaHJvbWVEcml2ZXJWZXJzaW9uID0gJEV4aXN0aW5nQ2hyb21lRHJpdmVyVmVyc2lvbi5TcGxpdCgiICIpWzFdOw0KICAgIElmICgkQ2hyb21lRHJpdmVyVmVyc2lvbiAtZXEgJEV4aXN0aW5nQ2hyb21lRHJpdmVyVmVyc2lvbikgew0KICAgICAgICBXcml0ZS1PdXRwdXQgIkNocm9tZWRyaXZlciBvbiBtYWNoaW5lIGlzIGFscmVhZHkgbGF0ZXN0IHZlcnNpb24uIFNraXBwaW5nLiI7DQogICAgICAgIFdyaXRlLU91dHB1dCAiVXNlIC1Gb3JjZURvd25sb2FkIHRvIHJlaW5zdGFsbCByZWdhcmRsZXNzIjsNCiAgICAgICAgRXhpdDsNCiAgICB9DQp9DQoNCiRUZW1wRmlsZVBhdGggPSBbU3lzdGVtLklPLlBhdGhdOjpHZXRUZW1wRmlsZU5hbWUoKTsNCiRUZW1wWmlwRmlsZVBhdGggPSAkVGVtcEZpbGVQYXRoLlJlcGxhY2UoIi50bXAiLCAiLnppcCIpOw0KUmVuYW1lLUl0ZW0gLVBhdGggJFRlbXBGaWxlUGF0aCAtTmV3TmFtZSAkVGVtcFppcEZpbGVQYXRoOw0KJFRlbXBGaWxlVW56aXBQYXRoID0gJFRlbXBGaWxlUGF0aC5SZXBsYWNlKCIudG1wIiwgIiIpOw0KIyAgIFVzZSB0aGUgVVJMIGNyZWF0ZWQgaW4gdGhlIGxhc3Qgc3RlcCB0byByZXRyaWV2ZSBhIHNtYWxsIGZpbGUgY29udGFpbmluZyB0aGUgdmVyc2lvbiBvZiBDaHJvbWVEcml2ZXIgdG8gdXNlLiBGb3IgZXhhbXBsZSwgdGhlIGFib3ZlIFVSTCB3aWxsIGdldCB5b3VyIGEgZmlsZSBjb250YWluaW5nICI3Mi4wLjM2MjYuNjkiLiAoVGhlIGFjdHVhbCBudW1iZXIgbWF5IGNoYW5nZSBpbiB0aGUgZnV0dXJlLCBvZiBjb3Vyc2UuKQ0KIyAgIFVzZSB0aGUgdmVyc2lvbiBudW1iZXIgcmV0cmlldmVkIGZyb20gdGhlIHByZXZpb3VzIHN0ZXAgdG8gY29uc3RydWN0IHRoZSBVUkwgdG8gZG93bmxvYWQgQ2hyb21lRHJpdmVyLiBXaXRoIHZlcnNpb24gNzIuMC4zNjI2LjY5LCB0aGUgVVJMIHdvdWxkIGJlICJodHRwczovL2Nocm9tZWRyaXZlci5zdG9yYWdlLmdvb2dsZWFwaXMuY29tL2luZGV4Lmh0bWw/cGF0aD03Mi4wLjM2MjYuNjkvIi4NCg0KSWYgKCRJc1dpbmRvd3MgLW9yICRFbnY6T1MpIHsNCiAgICBJbnZva2UtV2ViUmVxdWVzdCAiaHR0cHM6Ly9jaHJvbWVkcml2ZXIuc3RvcmFnZS5nb29nbGVhcGlzLmNvbS8kQ2hyb21lRHJpdmVyVmVyc2lvbi9jaHJvbWVkcml2ZXJfd2luMzIuemlwIiAtT3V0RmlsZSAkVGVtcFppcEZpbGVQYXRoOw0KICAgIEV4cGFuZC1BcmNoaXZlICRUZW1wWmlwRmlsZVBhdGggLURlc3RpbmF0aW9uUGF0aCAkVGVtcEZpbGVVbnppcFBhdGg7DQogICAgTW92ZS1JdGVtICIkVGVtcEZpbGVVbnppcFBhdGgvY2hyb21lZHJpdmVyLmV4ZSIgLURlc3RpbmF0aW9uICRDaHJvbWVEcml2ZXJPdXRwdXRQYXRoIC1Gb3JjZTsNCn0NCkVsc2VJZiAoJElzTGludXgpIHsNCiAgICBJbnZva2UtV2ViUmVxdWVzdCAiaHR0cHM6Ly9jaHJvbWVkcml2ZXIuc3RvcmFnZS5nb29nbGVhcGlzLmNvbS8kQ2hyb21lRHJpdmVyVmVyc2lvbi9jaHJvbWVkcml2ZXJfbGludXg2NC56aXAiIC1PdXRGaWxlICRUZW1wWmlwRmlsZVBhdGg7DQogICAgRXhwYW5kLUFyY2hpdmUgJFRlbXBaaXBGaWxlUGF0aCAtRGVzdGluYXRpb25QYXRoICRUZW1wRmlsZVVuemlwUGF0aDsNCiAgICBNb3ZlLUl0ZW0gIiRUZW1wRmlsZVVuemlwUGF0aC9jaHJvbWVkcml2ZXIiIC1EZXN0aW5hdGlvbiAkQ2hyb21lRHJpdmVyT3V0cHV0UGF0aCAtRm9yY2U7DQp9DQpFbHNlSWYgKCRJc01hY09TKSB7DQogICAgSW52b2tlLVdlYlJlcXVlc3QgImh0dHBzOi8vY2hyb21lZHJpdmVyLnN0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vJENocm9tZURyaXZlclZlcnNpb24vY2hyb21lZHJpdmVyX21hYzY0LnppcCIgLU91dEZpbGUgJFRlbXBaaXBGaWxlUGF0aDsNCiAgICBFeHBhbmQtQXJjaGl2ZSAkVGVtcFppcEZpbGVQYXRoIC1EZXN0aW5hdGlvblBhdGggJFRlbXBGaWxlVW56aXBQYXRoOw0KICAgIE1vdmUtSXRlbSAiJFRlbXBGaWxlVW56aXBQYXRoL2Nocm9tZWRyaXZlciIgLURlc3RpbmF0aW9uICRDaHJvbWVEcml2ZXJPdXRwdXRQYXRoIC1Gb3JjZTsNCn0NCkVsc2Ugew0KICAgIFRocm93ICJZb3VyIG9wZXJhdGluZyBzeXN0ZW0gaXMgbm90IHN1cHBvcnRlZCBieSB0aGlzIHNjcmlwdC4iOw0KfQ0KDQojICAgQWZ0ZXIgdGhlIGluaXRpYWwgZG93bmxvYWQsIGl0IGlzIHJlY29tbWVuZGVkIHRoYXQgeW91IG9jY2FzaW9uYWxseSBnbyB0aHJvdWdoIHRoZSBhYm92ZSBwcm9jZXNzIGFnYWluIHRvIHNlZSBpZiB0aGVyZSBhcmUgYW55IGJ1ZyBmaXggcmVsZWFzZXMuDQoNCiMgQ2xlYW4gdXAgdGVtcCBmaWxlcw0KUmVtb3ZlLUl0ZW0gJFRlbXBaaXBGaWxlUGF0aDsNClJlbW92ZS1JdGVtICRUZW1wRmlsZVVuemlwUGF0aCAtUmVjdXJzZTsNCg0KIyByZXNldCBiYWNrIHRvIG9yaWdpbmFsIFByb2dyZXNzIFByZWZlcmVuY2UNCiRQcm9ncmVzc1ByZWZlcmVuY2UgPSAkT3JpZ2luYWxQcm9ncmVzc1ByZWZlcmVuY2U7");

	public static string string_10 = "MaxCare";

	public static void smethod_0()
	{
		string text = string_6;
		string text2 = text;
		if (!(text2 == "min"))
		{
			if (text2 == "hvkd")
			{
				string_5 = "https://hocvienkinhdoanh.minsoftware.vn/";
			}
		}
		else
		{
			string_5 = "http://app.minsoftware.xyz/";
		}
	}
}
